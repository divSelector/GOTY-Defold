local collision = require "modules.collision"
local utils = require "modules.utils"
local state = require "modules.state"
local audio = require "modules.audio"

local tile_width = 16
local tile_height = 16

go.property("star", 0)

function init(self)

    self.is_collected = false

    self.id = go.get_id()
    self.aabb_id = collision.add_ball(msg.url('.'))

    sprite.play_flipbook("#sprite", "ball-" .. self.star)

    local pos = go.get_position()

    local _, _, w, h = tilemap.get_bounds("/level#tilemap")

    local tile_x = math.floor((pos.x - w * tile_width) / tile_width) + 2
    local tile_y = math.floor((pos.y - h * tile_height) / tile_height) + 2

    local is_x_odd = tile_x % 2 ~= 0
    local is_y_odd = tile_y % 2 ~= 0

    local duration_scale
    if (is_x_odd and not is_y_odd) or (not is_x_odd and is_y_odd) then
        duration_scale = 1
    else
        duration_scale = 2
    end

	go.animate(".", "scale", go.PLAYBACK_LOOP_PINGPONG, 0.9, go.EASING_OUTBOUNCE, duration_scale, 1)

    local delay_jump = math.random() * 2
    timer.delay(delay_jump, false, function()
        go.animate(".", "position.y", go.PLAYBACK_LOOP_PINGPONG, pos.y - 10, go.EASING_OUTBOUNCE, 2)
    end)

    self.position = pos

end

function update(self, dt)
    
    local is_visible = utils.is_box_on_screen(self, self.position, 16, 16).on_screen
    if not is_visible then
        return
    end

    collision.check_ball(self)

    if self.is_collected then

        if not self.destructing then
            self.destructing = true
            audio.play_sound("checkpoint")
            collision.destroy(self.aabb_id)
            timer.delay(3, false, function()
                state.ball_count = state.ball_count + 1
                print(state.ball_count)
                go.delete()
            end)
        end

        self.position.y = self.position.y + 10
        self.position.z = 0.1
        go.set_position(self.position)

    end
end


function on_message(self, message_id, message, sender)

    if message_id == hash("collect") then
        go.cancel_animations(".")
        self.is_collected = true
    end

end